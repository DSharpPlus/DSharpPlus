From 24fe0525a162925d4f770c16bf15d2d44c9a858c Mon Sep 17 00:00:00 2001
From: Lunar Starstrum <lunar@forsaken-borders.net>
Date: Sat, 16 Mar 2024 09:21:25 -0500
Subject: [PATCH 2/2] Add a few more methods

---
 DSharpPlus.Commands/CommandsExtension.cs | 23 +++++++++++++++++++++++
 1 file changed, 23 insertions(+)

diff --git a/DSharpPlus.Commands/CommandsExtension.cs b/DSharpPlus.Commands/CommandsExtension.cs
index 23b93a5e..edcd594e 100644
--- a/DSharpPlus.Commands/CommandsExtension.cs
+++ b/DSharpPlus.Commands/CommandsExtension.cs
@@ -3,6 +3,7 @@ namespace DSharpPlus.Commands;
 using System;
 using System.Collections.Frozen;
 using System.Collections.Generic;
+using System.Diagnostics.CodeAnalysis;
 using System.IO;
 using System.Linq;
 using System.Linq.Expressions;
@@ -198,6 +199,18 @@ public sealed class CommandsExtension : BaseExtension
         }
     }
 
+    public bool TryGetProcessor<TProcessor>([NotNullWhen(true)] out TProcessor? processor) where TProcessor : ICommandProcessor
+    {
+        if (this._processors.TryGetValue(typeof(TProcessor), out ICommandProcessor? processorBase))
+        {
+            processor = (TProcessor)processorBase;
+            return true;
+        }
+
+        processor = default!;
+        return false;
+    }
+
     public TProcessor GetProcessor<TProcessor>() where TProcessor : ICommandProcessor
         => (TProcessor)this._processors[typeof(TProcessor)];
 
@@ -214,6 +227,16 @@ public sealed class CommandsExtension : BaseExtension
         return false;
     }
 
+    public void ClearProcessors()
+    {
+        foreach (ICommandProcessor processor in this._processors.Values)
+        {
+            processor.Dispose();
+        }
+
+        this._processors.Clear();
+    }
+
     /// <summary>
     /// Adds all public checks from the provided assembly to the extension.
     /// </summary>
-- 
2.44.0

