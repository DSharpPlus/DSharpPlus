name: Release
on:
  release:
    types: ["published"]

env:
  DOTNET_NOLOGO: 1
  DOTNET_CLI_TELEMETRY_OPTOUT: 1
  DOTNET_SKIP_FIRST_TIME_EXPERIENCE: 1
  DOTNET_SYSTEM_GLOBALIZATION_INVARIANT: 1

jobs:
  build-commit:
    name: Build Commit
    runs-on: ubuntu-latest
    if: "!contains(format('{0} {1}', github.event.head_commit.message, github.event.pull_request.title), '[ci-skip]')"
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          submodules: recursive
      - name: Setup .NET
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: |
            8
            7
      - name: Build Project
        run: dotnet build
  package-commit:
    name: Package Commit
    runs-on: ubuntu-latest
    needs: build-commit
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          submodules: recursive
          fetch-depth: 0
      - name: Setup .NET
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: |
            8
            7
      - name: Package Project
        run: |
          dotnet pack -c Release -o build
          dotnet nuget push "build/*" --skip-duplicate -k ${{ secrets.NUGET_ORG_API_KEY }} -s https://api.nuget.org/v3/index.json
          LATEST_STABLE_VERSION=$(git describe --abbrev=0 --tags 2>/dev/null || echo '') dotnet run --project ./tools/AutoUpdateChannelDescription
        env:
          DISCORD_TOKEN: ${{ secrets.DISCORD_TOKEN }}
          DISCORD_GUILD_ID: ${{ secrets.DISCORD_GUILD_ID }}
          DISCORD_CHANNEL_ID: ${{ secrets.DISCORD_CHANNEL_ID }}
          DISCORD_CHANNEL_TOPIC: ${{ secrets.DISCORD_CHANNEL_TOPIC }}
          NUGET_URL: ${{ secrets.NUGET_URL }}
          GITHUB_URL : ${{ github.server_url }}/${{ github.repository }}
      - name: Upload Artifact
        uses: actions/upload-artifact@v3
        with:
          name: DSharpPlus.zip
          path: ./build/*
  document-commit:
    name: Document Commit
    runs-on: ubuntu-latest
    needs: package-commit
    permissions:
      pages: write
      id-token: write
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          submodules: recursive
          fetch-depth: 0
      - name: Setup .NET
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: |
            8
            7
      - name: Build Project
        run: |
          dotnet build
          dotnet tool update -g docfx --prerelease
          docfx docs/docfx.json
      - name: Upload GitHub Pages artifact
        uses: actions/upload-pages-artifact@v1
        with:
          path: ./docs/_site/
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v1